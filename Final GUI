#Import tkinter library
from tkinter import *
from tkinter import ttk
import time
import csv
from os.path import exists
#Create an instance of tkinter frame or window
win= Tk()
#Set the geometry of tkinter frame
win.geometry("750x250")
#Define a new function to open the window

global maxtempslider
global mintempslider
global maxhumslider
global minhumslider
global minmoistslider
global maxmoistslider
global maxtemp
global mintemp
global max_temp
global min_temp
global max_hum
global min_hum
#global max_moist
#global min_moist
parameters = [0, 0, 0, 0, 0]

#maxtemp = []
#mintemp = []

#f = open('Levels.csv', 'w')
#write = csv.writer(f)

def temp_win():
   temp = Toplevel(win)
   temp.geometry("750x250")
   temp.title("Temperature")
   #Create a Label in New window
   #Label(new, text="What would you like the minimum temperature to be?", font=('Helvetica 17 bold')).pack(pady=30)
   Label(temp, text="What would you like the minimum temperature to be?", font=('Helvetica 17 bold')).pack(pady=30)
   ttk.Button(temp, text="Change Min Temp", command=min_temp_slider).pack()
   Label(temp, text="What would you like the maximum temperature to be?", font=('Helvetica 17 bold')).pack(pady=30)
   ttk.Button(temp, text="Change Max Temp", command=max_temp_slider).pack()


def max_temp_slider():
   global maxtempslider
   temps = Toplevel(win)
   win.geometry('750x250')
   win.title('Temperature Slide\r')
   maxtempslider = Scale(temps, from_=0, to=150)
   maxtempslider.pack()
   max_temp = maxtempslider.get()
   ttk.Button(temps, text = "Confirm new Temp", command = set_max_temp).pack()
   max_temp = maxtempslider.get()
   maxtempslider.set(max_temp)


def set_max_temp():
   max_temp = maxtempslider.get()
   #print("New max temp is: ", max_temp)
   add_to_params_list(max_temp,0)

def min_temp_slider():
   global mintempslider
   temps = Toplevel(win)
   win.geometry('750x250')
   win.title('Temperature Slider')
   mintempslider = Scale(temps, from_=0, to=150)
   mintempslider.pack()
   ttk.Button(temps, text = "Confirm new Temp", command = set_min_temp).pack()
   min_temp = mintempslider.get()

   
def set_min_temp():
   min_temp = mintempslider.get()
   #print('New min temp is: ', min_temp)
   add_to_params_list(min_temp,1)

def hum_win():
   hum= Toplevel(win)
   hum.geometry("750x250")
   hum.title("Humidity")
   #Create a Label in New window
   Label(hum, text="What would you like the minimum humidity percentage to be?", font=('Helvetica 17 bold')).pack(pady=30)
   ttk.Button(hum, text="Change Min Humidity Percentage", command=min_hum_slider).pack()
   Label(hum, text="What would you like the maximum humidity percentage to be?", font=('Helvetica 17 bold')).pack(pady=30)
   ttk.Button(hum, text="Change Max Humidity Percentage", command=max_hum_slider).pack()

def min_hum_slider():
   global minhumslider
   hums = Toplevel(win)
   win.geometry('750x250')
   win.title('Humidity Slider')
   minhumslider = Scale(hums, from_=0, to=100)
   minhumslider.pack()
   ttk.Button(hums, text = "Confirm new humidity level", command = set_min_hum).pack()
   min_hum = minhumslider.get()
   minhumslider.set(min_hum)
   
def set_min_hum():
   min_hum = minhumslider.get()
   #print('New min temp is: ', min_hum)
   add_to_params_list(min_hum,3)
   
def max_hum_slider():
   global maxhumslider
   hums = Toplevel(win)
   win.geometry('750x250')
   win.title('Humidity Slider')
   maxhumslider = Scale(hums, from_=0, to=100)
   maxhumslider.pack()
   ttk.Button(hums, text = "Confirm new humidity level", command = set_max_hum).pack()
   max_hum = maxhumslider.get()
   
def set_max_hum():
   max_hum = maxhumslider.get()
   #print('New max hum is: ', max_hum)
   add_to_params_list(max_hum, 2)
 
def moist_win():
   moist= Toplevel(win)
   moist.geometry("750x250")
   moist.title("Soil Moisture")
   #Create a Label in New window
   Label(moist, text="What would you like the minimum soil moisture % to be?", font=('Helvetica 17 bold')).pack(pady=30)
   ttk.Button(moist, text="Change Min Soil Moisture % ", command=min_moist_slider).pack()
   #Label(moist, text="What would you like the maximum soil moisture % to be?", font=('Helvetica 17 bold')).pack(pady=30)
   #ttk.Button(moist, text="Change Max Soil Moisture %", command=max_moist_slider).pack()

def min_moist_slider():
   global minmoistslider
   moists = Toplevel(win)
   win.geometry('750x250')
   win.title('Moisture Slider')
   minmoistslider = Scale(moists, from_=0, to=1023)
   minmoistslider.pack()
   minmoistslider.set(0)
   ttk.Button(moists, text = "Confirm new moisture level", command = set_min_moist).pack()
   min_moist = minmoistslider.get()

   
def set_min_moist():
   min_moist = minmoistslider.get()
   #print('New min moisture is: ', min_moist)
   add_to_params_list(min_moist,4)

#def max_moist_slider():
   #global maxmoistslider
   #moists = Toplevel(win)
   #win.geometry('750x250')
   #win.title('Humidity Slider')
   #maxmoistslider = Scale(moists, from_=0, to=100)
   #maxmoistslider.pack()
   #maxmoistslider.set(0)
   #ttk.Button(moists, text = "Confirm new humidity level", command = set_max_moist).pack()
   #max_moist = maxmoistslider.get()

#def set_max_moist():
   #max_moist = maxmoistslider.get()
   #print('New max moisture is: ', max_moist)
   #add_to_params_list(max_moist,4)

def add_to_params_list(var, index):
   parameters[index] = var

def append_to_csv():
      #if(not exists("parameters.csv")):
      f = open("parameters.csv", 'w')
      writer = csv.writer(f)
      writer.writerow(['max_temp','min_temp','max_hum','min_hum','min_moist'])
      writer.writerow(parameters)
      f.close()
	
	#f = open("parameters.csv", "a")
	#writer = csv.writer(f)
	#writer.writerow(parameters)
	#f.close()
		

#Useful later on maybe
#def clear_list():
  #parameters = [] 

#Create a label
Label(win, text= "Which subsystem would you like to view?", font= ('Helvetica 17 bold')).pack(pady=30)
#Create a button to open a New Window
ttk.Button(win, text="Temperature", command=temp_win).pack()
ttk.Button(win, text="Humidity", command=hum_win).pack()
ttk.Button(win, text="Soil Moisture", command=moist_win).pack()
ttk.Button(win, text="Confirm New Parameters", command=append_to_csv).pack()
win.mainloop()

   

